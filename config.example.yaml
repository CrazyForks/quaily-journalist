app:
  log_level: "info"

redis:
  addr: "127.0.0.1:6379"
  password: ""
  db: 0

openai:
  api_key: ""
  model: "gpt-4o-mini"
  base_url: "" # optional, e.g., https://api.openai.com/v1

quaily:
  base_url: "https://api.quaily.com/v1"
  api_key: ""
  timeout: "10s"

sources:
  v2ex:
    token: "" # Optional
    base_url: "https://www.v2ex.com"
    fetch_interval: "10m"
  hackernews:
    base_api: "https://hacker-news.firebaseio.com/v0"
    fetch_interval: "10m"

newsletters:
  output_dir: "./out"
  channels:
    - name: "v2ex_daily_digest"
      source: "v2ex"
      nodes: ["crypto", "solana", "create"]
      frequency: "daily"
      top_n: 20
      min_items: 5
      item_skip_duration: "72h"
      language: "English"
      template:
        title: "V2EX Daily {.CurrentDate}"
        preface: "Your daily V2EX highlights."
        postscript: "Brought to you by Quaily Journalist."
    - name: "hn_daily_digest"
      source: "hackernews"
      # For HN, nodes are list names to poll directly: ["top", "new", "best", "ask", "show", "job"]
      # If you also want to restrict by item types in the output, include type names (ask/show/job/story) here;
      # otherwise all fetched items are eligible for publishing.
      nodes: ["top", "best"]
      frequency: "daily"
      top_n: 20
      min_items: 5
      item_skip_duration: "72h"
      language: "English"
      template:
        title: "Hacker News Daily YYYY-MM-DD"
        preface: "Top HN highlights today."
        postscript: "Brought to you by Quaily Journalist."
